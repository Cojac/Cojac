/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_github_cojac_utils_Posit32Utils */

#ifndef _Included_com_github_cojac_utils_Posit32Utils
#define _Included_com_github_cojac_utils_Posit32Utils
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_github_cojac_utils_Posit32Utils
 * Method:    toFloat
 * Signature: (F)F
 */
JNIEXPORT jfloat JNICALL Java_com_github_cojac_utils_Posit32Utils_toFloat
  (JNIEnv *, jclass, jfloat);

/*
 * Class:     com_github_cojac_utils_Posit32Utils
 * Method:    toPosit
 * Signature: (F)F
 */
JNIEXPORT jfloat JNICALL Java_com_github_cojac_utils_Posit32Utils_toPosit
  (JNIEnv *, jclass, jfloat);

/*
 * Class:     com_github_cojac_utils_Posit32Utils
 * Method:    add
 * Signature: (FF)F
 */
JNIEXPORT jfloat JNICALL Java_com_github_cojac_utils_Posit32Utils_add
  (JNIEnv *, jclass, jfloat, jfloat);

/*
 * Class:     com_github_cojac_utils_Posit32Utils
 * Method:    substract
 * Signature: (FF)F
 */
JNIEXPORT jfloat JNICALL Java_com_github_cojac_utils_Posit32Utils_substract
  (JNIEnv *, jclass, jfloat, jfloat);

/*
 * Class:     com_github_cojac_utils_Posit32Utils
 * Method:    multiply
 * Signature: (FF)F
 */
JNIEXPORT jfloat JNICALL Java_com_github_cojac_utils_Posit32Utils_multiply
  (JNIEnv *, jclass, jfloat, jfloat);

/*
 * Class:     com_github_cojac_utils_Posit32Utils
 * Method:    divide
 * Signature: (FF)F
 */
JNIEXPORT jfloat JNICALL Java_com_github_cojac_utils_Posit32Utils_divide
  (JNIEnv *, jclass, jfloat, jfloat);

/*
 * Class:     com_github_cojac_utils_Posit32Utils
 * Method:    sqrt
 * Signature: (F)F
 */
JNIEXPORT jfloat JNICALL Java_com_github_cojac_utils_Posit32Utils_sqrt
  (JNIEnv *, jclass, jfloat);

/*
 * Class:     com_github_cojac_utils_Posit32Utils
 * Method:    fma
 * Signature: (FFF)F
 */
JNIEXPORT jfloat JNICALL Java_com_github_cojac_utils_Posit32Utils_fma
  (JNIEnv *, jclass, jfloat, jfloat, jfloat);

/*
 * Class:     com_github_cojac_utils_Posit32Utils
 * Method:    equals
 * Signature: (FF)Z
 */
JNIEXPORT jboolean JNICALL Java_com_github_cojac_utils_Posit32Utils_equals
  (JNIEnv *, jclass, jfloat, jfloat);

/*
 * Class:     com_github_cojac_utils_Posit32Utils
 * Method:    isLess
 * Signature: (FF)Z
 */
JNIEXPORT jboolean JNICALL Java_com_github_cojac_utils_Posit32Utils_isLess
  (JNIEnv *, jclass, jfloat, jfloat);

/*
 * Class:     com_github_cojac_utils_Posit32Utils
 * Method:    isLessOrEquals
 * Signature: (FF)Z
 */
JNIEXPORT jboolean JNICALL Java_com_github_cojac_utils_Posit32Utils_isLessOrEquals
  (JNIEnv *, jclass, jfloat, jfloat);

#ifdef __cplusplus
}
#endif
#endif
